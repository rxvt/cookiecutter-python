# See here for image contents: https://github.com/microsoft/vscode-dev-containers/tree/v0.231.1/containers/python-3/.devcontainer/base.Dockerfile

# [Choice] Python version (use -bullseye variants on local arm64/Apple Silicon): 3, 3.10, 3.9, 3.8, 3.7, 3.6, 3-bullseye, 3.10-bullseye, 3.9-bullseye, 3.8-bullseye, 3.7-bullseye, 3.6-bullseye, 3-buster, 3.10-buster, 3.9-buster, 3.8-buster, 3.7-buster, 3.6-buster
ARG VARIANT="3.10-bullseye"
FROM mcr.microsoft.com/vscode/devcontainers/python:0-${VARIANT}

ENV PYTHON_37={{ cookiecutter.python_37 }}
ENV PYTHON_38={{ cookiecutter.python_38 }}
ENV PYTHON_39={{ cookiecutter.python_39 }}
ENV PYTHON_310={{ cookiecutter.python_310 }}

# [Choice] Node.js version: none, lts/*, 16, 14, 12, 10
ARG NODE_VERSION="none"
RUN if [ "${NODE_VERSION}" != "none" ]; then su vscode -c "umask 0002 && . /usr/local/share/nvm/nvm.sh && nvm install ${NODE_VERSION} 2>&1"; fi

# [Optional] If your pip requirements rarely change, uncomment this section to add them to the image.
# COPY requirements.txt /tmp/pip-tmp/
# RUN pip3 --disable-pip-version-check --no-cache-dir install -r /tmp/pip-tmp/requirements.txt \
#    && rm -rf /tmp/pip-tmp

# [Optional] Uncomment this section to install additional OS packages.
# bat = a better cat
# ripgrep = a better grep
RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \
     && apt-get -y install --no-install-recommends bat ripgrep

# [Optional] Uncomment this line to install global node packages.
# RUN su vscode -c "source /usr/local/share/nvm/nvm.sh && npm install -g <your-package-here>" 2>&1

USER vscode
RUN git clone https://github.com/pyenv/pyenv.git ~/.pyenv \
    && echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.profile \
    && echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.profile \
    && echo 'eval "$(pyenv init --path)"' >> ~/.profile \
    && echo 'if command -v pyenv >/dev/null; then eval "$(pyenv init -)"; fi' >> ~/.bashrc
RUN curl -sSL https://install.python-poetry.org | python3 -
RUN $HOME/.local/bin/poetry config virtualenvs.prefer-active-python true
RUN $HOME/.local/bin/poetry config virtualenvs.in-project true
RUN $HOME/.pyenv/bin/pyenv install --skip-existing $PYTHON_37
RUN $HOME/.pyenv/bin/pyenv install --skip-existing $PYTHON_38
RUN $HOME/.pyenv/bin/pyenv install --skip-existing $PYTHON_39
RUN $HOME/.pyenv/bin/pyenv install --skip-existing $PYTHON_310

RUN $HOME/.pyenv/bin/pyenv global $PYTHON_310
